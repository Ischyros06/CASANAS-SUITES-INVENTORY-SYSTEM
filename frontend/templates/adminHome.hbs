<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Home</title>
    <link rel="stylesheet" href="/adminHome.css">
</head>
<body>
    <aside>
        <ul>
            <li>Welcome, {{admin.name}}</li>
            <li><a href="/goHomeAdmin">Home</a></li>
            <li><a href="/status">Status</a></li>
            <li><a href="/report">Reports</a></li>
            <li><a href="/needToBuy">Need to Buy</a></li>
            <li><a href="/logout">Logout</a></li>
        </ul>
    </aside>

    <div class="controlPanel">
        <h1>Welcome to Stack Inventory - Admin Side</h1>

        <label for="items">Select an item to in:</label>
        <ul name="items" id="items" class="items">
            <div class="item-container" >
                {{#each itemCollection}}
                <li value="{{this.product}}" class="item" data-product="{{this.product}}">
                    <img class="productImage" src="{{this.picture}}" alt="{{this.product}}">
                    <span class="itemName">{{this.product}}</span>
                    <span class="itemQuantity">{{this.quantity}}/{{this.maxQuantity}}</span>
                    <!-- This is for showcasing the picture of the item -->
                    <button type="button" id="addQuantity" class="add-quantity" data-product="{{this.product}}">&plus;</button>
                    <!-- &plus; is as HTML entity for 'plus sign'-->
                </li>
                {{/each}}
            </div>
        </ul>
    </div>
    

    
    <script>
        // Function to fetch and display near-depletion items
        async function fetchNearDepletionItems() {
            try {
                const response = await fetch('/getNearDepletionItems');
                const nearDepletionItems = await response.json();
            } catch (error) {
                console.error(`Error fetching near-depletion items: ${error}`);
            }
        }

        // Call the fetch NearDepletionItems function when the page loads
        document.addEventListener("DOMContentLoaded", fetchNearDepletionItems);

        document.addEventListener("DOMContentLoaded", () => {

        let currentQuantity;
        const itemsContainer = document.querySelector('.item-container');

        // Add event listener to the "add quantity" buttons for each item.
        itemsContainer.addEventListener('click', async (event) => {
            const target = event.target;
            console.log(target);

            // Check if the clicked element is a button with the class 'add-quantity'
            if (target.classList.contains('add-quantity')) {
                const selectedProduct = target.getAttribute('data-product');

                 // Ensure a product is selected
                if (!selectedProduct) {
                    console.error("No product selected");
                    return;
                }

                try {
                    // Increment the quantity by 1 in the database.
                    const response = await fetch(`/adminHome/getQuantity?product=${selectedProduct}`);
                    const data = await response.json();

                    // Update the quantity display with the current quantity.
                    currentQuantity = data.quantity;
                    const quantityDisplay = target.parentElement.querySelector('.itemQuantity');
                    quantityDisplay.textContent = `${currentQuantity}/${data.maxQuantity}`;
                    
    
                    // Increment the quantity by 1 in the database.
                    const addResponse = await fetch(`/adminHome/addQuantity?product=${selectedProduct}`);
                    const addData = await addResponse.json();

                    if (addData.success) {
                        // Update the quantity display with the new quantity.
                        currentQuantity++;
                        quantityDisplay.textContent = `${currentQuantity}/${addData.maxQuantity}`;
                        console.log(`Quantity for ${selectedProduct} added successfully`);
                    } else {
                        quantityDisplay.textContent = `${currentQuantity}/${addData.maxQuantity}`;
                        console.error(`Failed to add quantity: ${addData.message}`);
                    }
                } catch (error) {
                    console.error(`Error adding quantity: ${error}`);
                }
            }
        });
    });
    </script>
</body>
</html>